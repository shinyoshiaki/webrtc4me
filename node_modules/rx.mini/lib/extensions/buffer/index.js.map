{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/extensions/buffer/index.ts"],"names":[],"mappings":";;;AAAA,4DAA+B;AAE/B,SAAgB,MAAM,CAAI,MAAc,EAAE,KAAe;IACvD,IAAM,UAAU,GAAG,IAAI,cAAK,EAAK,CAAC;IAClC,IAAM,IAAI,GAAQ,EAAE,CAAC;IACrB,IAAI,MAAM,GAAG,KAAK,CAAC;IACnB,KAAK,CAAC,SAAS,CAAC,UAAA,CAAC;QACf,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,MAAM,GAAG,IAAI,CAAC;SACf;QACD,IAAI,MAAM,EAAE;YACV,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACd;IACH,CAAC,CAAC,CAAC;IAEK,IAAA,gCAAS,EAAE,gCAAS,EAAE,sBAAI,CAAgB;IAClD,OAAO,EAAE,SAAS,WAAA,EAAE,SAAS,WAAA,EAAE,IAAI,MAAA,EAAE,CAAC;AACxC,CAAC;AAlBD,wBAkBC","sourcesContent":["import Event from \"../../core\";\n\nexport function Buffer<T>(length: number, event: Event<T>) {\n  const observable = new Event<T>();\n  const pool: T[] = [];\n  let fulled = false;\n  event.subscribe(e => {\n    if (!fulled && pool.length === length) {\n      pool.forEach(observable.execute);\n      fulled = true;\n    }\n    if (fulled) {\n      observable.execute(e);\n    } else {\n      pool.push(e);\n    }\n  });\n\n  const { subscribe, asPromise, once } = observable;\n  return { subscribe, asPromise, once };\n}\n"]}
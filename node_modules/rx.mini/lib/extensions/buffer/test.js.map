{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../src/extensions/buffer/test.ts"],"names":[],"mappings":";AAAA,iBAiBA;;;AAjBA,4DAA+B;AAC/B,sBAA2B;AAE3B,IAAI,CAAC,QAAQ,EAAE;;;QACP,KAAK,GAAG,IAAI,cAAK,EAAU,CAAC;QAC5B,IAAI,GAAG,SAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1B,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,SAAS,CAAC,UAAA,CAAC;YACd,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;;;KACpB,CAAC,CAAC","sourcesContent":["import Event from \"../../core\";\nimport { Buffer } from \".\";\n\ntest(\"buffer\", async () => {\n  const event = new Event<number>();\n  const pool = Buffer(3, event);\n  let i = 0;\n  pool.subscribe(v => {\n    expect(i > 3).toBe(true);\n  });\n  event.execute(i++);\n  event.execute(i++);\n  event.execute(i++);\n  event.execute(i++);\n  event.execute(i++);\n  event.execute(i++);\n});\n"]}
{"version":3,"sources":["../../lib/index.js","../../lib/modules/stream.js","../../lib/modules/file.js","lib/index.ts","webrtc/signaling.ts","App.tsx","serviceWorker.ts","index.tsx","../../lib/utill/media.js","../../lib/core.js"],"names":["Object","defineProperty","exports","value","tslib_1","__webpack_require__","core_1","__importDefault","stream_1","Stream","default","file_1","FileShare","Utill","__importStar","rx_mini_1","MediaType","peer","opt","this","onStream","onLocalStream","initDone","label","listen","prototype","__awaiter","_a","get","stream","immidiate","track","localStream","_this","__generator","_b","init","catch","console","log","sent","execute","onData","once","raw","data","send","media","newPeer","isOffer","makeOffer","onSignal","sdp","JSON","stringify","setSdp","parse","onAddTrack","rxjs_1","chunkSize","getSliceArrayBuffer","blob","subject","Subject","state","asObservable","r","FileReader","blobSlice","File","slice","chunks","Math","ceil","size","currentChunk","loadNext","start","end","readAsArrayBuffer","call","onerror","e","error","onload","chunk","target","result","next","complete","name","subscribe","obj","type","payload","push","now","length","sendStart","sendChunk","sendEnd","WebRTC","socket","client","connect","create","roomId","trickle","Promise","resolve","rtc","nodeId","emit","on","onConnect","unSubscribe","message","join","App","_useState","useState","_useState2","slicedToArray","setRoomId","_useState3","_useState4","roomLabel","setRoomLabel","_useState5","_useState6","setTrickle","_useState7","undefined","_useState8","setRTC","_useState9","_useState10","text","setText","videoRef","useRef","useEffect","loadStream","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","local","wrap","_context","prev","getLocalVideo","current","srcObject","addTrack","getVideoTracks","stop","_x","apply","arguments","react_default","createElement","checked","onChange","placeholder","onClick","_callee2","_context2","_callee3","_context3","ref","autoPlay","style","width","height","index_es","multiline","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","option","mediaDevices","getUserMedia","audio","video","getLocalAudio","getLocalDesktop","getDisplayMedia","wrtc_1","onDisconnect","isConnected","isDisconnected","negotiating","dataChannels","prepareNewConnection","getTracks","forEach","disable_stun","RTCPeerConnection","iceServers","urls","ontrack","evt","streams","remoteStream","oniceconnectionstatechange","iceConnectionState","timeoutPing","setTimeout","hangUp","warn","clearTimeout","onicecandidate","candidate","ice","localDescription","ondatachannel","dataChannel","channel","dataChannelEvents","onsignalingstatechange","signalingState","createDatachannel","onnegotiationneeded","createOffer","setLocalDescription","negotiationSetting","offer","setAnswer","setRemoteDescription","RTCSessionDescription","makeAnswer","answer","createAnswer","addIceCandidate","RTCIceCandidate","dc","dce_1","keys","includes","trys","createDataChannel","onopen","onmessage","event","err","onclose","disconnect","key","close","onicegatheringstatechange"],"mappings":"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","file":"static/js/main.3906a92c.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar core_1 = tslib_1.__importDefault(require(\"./core\"));\n\nvar stream_1 = tslib_1.__importDefault(require(\"./modules/stream\"));\n\nexports.Stream = stream_1.default;\n\nvar file_1 = tslib_1.__importDefault(require(\"./modules/file\"));\n\nexports.FileShare = file_1.default;\n\nvar Utill = tslib_1.__importStar(require(\"./utill/media\"));\n\nexports.Utill = Utill;\nexports.default = core_1.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar core_1 = tslib_1.__importDefault(require(\"../core\"));\n\nvar rx_mini_1 = tslib_1.__importDefault(require(\"rx.mini\"));\n\nvar MediaType;\n\n(function (MediaType) {\n  MediaType[MediaType[\"video\"] = 0] = \"video\";\n  MediaType[MediaType[\"audio\"] = 1] = \"audio\";\n})(MediaType = exports.MediaType || (exports.MediaType = {}));\n\nvar Stream =\n/** @class */\nfunction () {\n  function Stream(peer, opt) {\n    if (opt === void 0) {\n      opt = {};\n    }\n\n    this.peer = peer;\n    this.opt = opt;\n    this.onStream = new rx_mini_1.default();\n    this.onLocalStream = new rx_mini_1.default();\n    this.initDone = false;\n    this.label = opt.label || \"stream\";\n    this.listen();\n  }\n\n  Stream.prototype.listen = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var label, _a, get, stream, immidiate, track, localStream;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            label = \"init_\" + this.label;\n            _a = this.opt, get = _a.get, stream = _a.stream, immidiate = _a.immidiate, track = _a.track;\n            localStream = stream;\n            if (!immidiate) return [3\n            /*break*/\n            , 1];\n            this.init({\n              stream: localStream,\n              track: track\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            if (!get) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , get.catch(console.log)];\n\n          case 2:\n            localStream = _b.sent();\n            this.onLocalStream.execute(localStream);\n            _b.label = 3;\n\n          case 3:\n            this.peer.onData.once(function (raw) {\n              if (raw.label === label && raw.data === \"done\") {\n                if (!get) {\n                  _this.init({\n                    stream: localStream,\n                    track: track\n                  });\n                }\n              }\n            });\n            this.peer.send(\"done\", label);\n            _b.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Stream.prototype.init = function (media) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var stream, track, peer, newPeer;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        stream = media.stream, track = media.track;\n        if (this.initDone) return [2\n        /*return*/\n        ];\n        this.initDone = true;\n        peer = this.peer;\n        newPeer = new core_1.default({\n          stream: stream,\n          track: track\n        });\n\n        if (peer.isOffer) {\n          newPeer.makeOffer();\n          newPeer.onSignal.once(function (sdp) {\n            peer.send(JSON.stringify(sdp), _this.label + \"_offer\");\n          });\n          peer.onData.once(function (raw) {\n            if (raw.label === _this.label + \"_answer\") {\n              newPeer.setSdp(JSON.parse(raw.data));\n            }\n          });\n        } else {\n          peer.onData.once(function (raw) {\n            if (raw.label === _this.label + \"_offer\") {\n              newPeer.setSdp(JSON.parse(raw.data));\n              newPeer.onSignal.once(function (sdp) {\n                peer.send(JSON.stringify(sdp), _this.label + \"_answer\");\n              });\n            }\n          });\n        }\n\n        newPeer.onAddTrack.once(function (stream) {\n          _this.onStream.execute(stream);\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return Stream;\n}();\n\nexports.default = Stream;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar chunkSize = 16000;\n\nfunction getSliceArrayBuffer(blob) {\n  var subject = new rxjs_1.Subject();\n  var state = subject.asObservable();\n  var r = new FileReader(),\n      blobSlice = File.prototype.slice,\n      chunks = Math.ceil(blob.size / chunkSize);\n  var currentChunk = 0;\n\n  r.onerror = function (e) {\n    subject.error(e);\n  };\n\n  r.onload = function (e) {\n    var chunk = e.target.result;\n    currentChunk++;\n\n    if (currentChunk < chunks) {\n      loadNext();\n      subject.next(chunk);\n    } else {\n      subject.complete();\n    }\n  };\n\n  function loadNext() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize >= blob.size ? blob.size : start + chunkSize;\n    r.readAsArrayBuffer(blobSlice.call(blob, start, end));\n  }\n\n  loadNext();\n  return state;\n}\n\nexports.getSliceArrayBuffer = getSliceArrayBuffer;\n\nvar FileShare =\n/** @class */\nfunction () {\n  function FileShare(peer, label) {\n    var _this = this;\n\n    this.peer = peer;\n    this.label = label;\n    this.subject = new rxjs_1.Subject();\n    this.state = this.subject.asObservable();\n    this.chunks = [];\n    this.name = \"\";\n    this.size = 0;\n    if (!label) label = \"file\";\n    console.log({\n      label: label\n    });\n    peer.onData.subscribe(function (raw) {\n      var label = raw.label,\n          data = raw.data;\n\n      if (label === _this.label) {\n        try {\n          var obj = JSON.parse(data);\n\n          switch (obj.state) {\n            case \"start\":\n              _this.chunks = [];\n              _this.name = obj.name;\n              _this.size = obj.size;\n              break;\n\n            case \"end\":\n              _this.subject.next({\n                type: \"downloaded\",\n                payload: {\n                  chunks: _this.chunks,\n                  name: _this.name\n                }\n              });\n\n              peer.send(JSON.stringify({\n                state: \"complete\",\n                name: _this.name\n              }), _this.label);\n              _this.chunks = [];\n              _this.name = \"\";\n              break;\n          }\n        } catch (error) {\n          _this.chunks.push(data);\n\n          _this.subject.next({\n            type: \"downloading\",\n            payload: {\n              now: _this.chunks.length * chunkSize,\n              size: _this.size\n            }\n          });\n        }\n      }\n    });\n  }\n\n  FileShare.prototype.sendStart = function (name, size) {\n    this.name = name;\n    this.peer.send(JSON.stringify({\n      state: \"start\",\n      size: size,\n      name: name\n    }), this.label);\n  };\n\n  FileShare.prototype.sendChunk = function (chunk) {\n    this.peer.send(chunk, this.label);\n  };\n\n  FileShare.prototype.sendEnd = function () {\n    this.peer.send(JSON.stringify({\n      state: \"end\"\n    }), this.label);\n  };\n\n  FileShare.prototype.send = function (blob) {\n    var _this = this;\n\n    this.sendStart(blob.name, blob.size);\n    getSliceArrayBuffer(blob).subscribe(function (chunk) {\n      return _this.sendChunk(chunk);\n    }, function () {}, function () {\n      _this.sendEnd();\n    });\n  };\n\n  return FileShare;\n}();\n\nexports.default = FileShare;","import WebRTC from \"../../../lib\";\nimport { getLocalVideo } from \"../../../lib/utill/media\";\n\nexport { getLocalVideo };\n\nexport default WebRTC;\n","import client from \"socket.io-client\";\nimport WebRTC from \"../lib\";\n\nconst url =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://aqueous-earth-75182.herokuapp.com/\"\n    : \"https://aqueous-earth-75182.herokuapp.com/\";\n\nconst socket = client.connect(url);\n\n// create is answer\n\nexport function create(roomId: string, trickle: boolean) {\n  console.log(\"crate is answer\");\n\n  return new Promise<WebRTC>(resolve => {\n    const rtc = new WebRTC({ nodeId: \"answer\", trickle });\n    socket.emit(\"create\", { roomId });\n    socket.on(\"sdp\", (data: { sdp: string }) => {\n      console.log({ data });\n      rtc.setSdp(data.sdp);\n    });\n\n    const onSignal = rtc.onSignal.subscribe(sdp => {\n      console.log({ sdp, roomId });\n      socket.emit(\"sdp\", { sdp, roomId });\n    });\n    rtc.onConnect.once(() => {\n      console.log(\"connect\");\n      onSignal.unSubscribe();\n      resolve(rtc);\n    });\n    rtc.onData.subscribe(message => {\n      console.log({ message });\n    });\n  });\n}\n\nexport function join(roomId: string, trickle: boolean) {\n  console.log(\"join is offer\");\n\n  return new Promise<WebRTC>(resolve => {\n    const rtc = new WebRTC({ nodeId: \"offer\", trickle });\n    socket.emit(\"join\", { roomId });\n    socket.on(\"join\", () => {\n      rtc.makeOffer();\n    });\n    socket.on(\"sdp\", (data: { sdp: string }) => {\n      console.log({ data });\n      rtc.setSdp(data.sdp);\n    });\n\n    const onSignal = rtc.onSignal.subscribe(sdp => {\n      console.log({ sdp, roomId });\n      socket.emit(\"sdp\", { sdp, roomId });\n    });\n    rtc.onConnect.once(() => {\n      console.log(\"connect\");\n      resolve(rtc);\n      onSignal.unSubscribe();\n    });\n    rtc.onData.subscribe(message => {\n      console.log({ message });\n    });\n  });\n}\n","import React, { FunctionComponent, useState, useRef, useEffect } from \"react\";\nimport { create, join } from \"./webrtc/signaling\";\nimport { TextField } from \"@material-ui/core\";\nimport WebRTC from \"./lib\";\nimport { getLocalVideo } from \"./lib\";\n\nconst App: FunctionComponent = () => {\n  const [roomId, setRoomId] = useState(\"\");\n  const [roomLabel, setRoomLabel] = useState(\"\");\n  const [trickle, setTrickle] = useState(false);\n  const [rtc, setRTC] = useState<WebRTC | undefined>(undefined);\n  const [text, setText] = useState(\"\");\n  const videoRef = useRef<any | undefined>(undefined);\n\n  useEffect(() => {\n    if (rtc) {\n      rtc.onData.subscribe(raw => {\n        if (raw.label === \"share\") setText(raw.data);\n      });\n    }\n  }, [rtc]);\n\n  const loadStream = async (peer: WebRTC) => {\n    const local = await getLocalVideo();\n    peer.onAddTrack.subscribe(stream => {\n      if (videoRef) {\n        videoRef.current.srcObject = stream;\n      }\n\n      if (!peer.isOffer) {\n        peer.addTrack(local.getVideoTracks()[0], local);\n      }\n    });\n\n    if (peer.isOffer) {\n      peer.addTrack(local.getVideoTracks()[0], local);\n    }\n  };\n\n  return (\n    <div>\n      <p>webrtc</p>\n      <div>\n        trickle\n        <br />\n        <input\n          type=\"radio\"\n          checked={!trickle}\n          onChange={() => setTrickle(!trickle)}\n        />\n        off\n        <input\n          type=\"radio\"\n          checked={trickle}\n          onChange={() => setTrickle(!trickle)}\n        />\n        on\n      </div>\n      <br />\n      <input\n        onChange={e => {\n          setRoomId(e.target.value);\n        }}\n        placeholder=\"roomId\"\n        value={roomId}\n      />\n      <button\n        onClick={async () => {\n          console.log(\"create\");\n          setRoomLabel(\"room:\" + roomId + \" create\");\n          setRoomId(\"\");\n          const rtc = await create(roomId, trickle);\n          setRTC(rtc);\n          loadStream(rtc);\n        }}\n      >\n        create\n      </button>\n      <button\n        onClick={async () => {\n          console.log(\"join\");\n          setRoomLabel(\"room:\" + roomId + \" join\");\n          setRoomId(\"\");\n          const rtc = await join(roomId, trickle);\n          setRTC(rtc);\n          loadStream(rtc);\n        }}\n      >\n        join\n      </button>\n      <br />\n      <p>{roomLabel}</p>\n      <video\n        ref={videoRef}\n        autoPlay={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n      />\n      <p>datachannel</p>\n      <TextField\n        multiline\n        value={text}\n        onChange={e => {\n          setText(e.target.value);\n          if (rtc) rtc.send(e.target.value, \"share\");\n        }}\n        style={{ width: \"40vw\" }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getLocalVideo(option) {\n  return new Promise(function (resolve) {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: option || true\n    }).then(function (stream) {\n      resolve(stream);\n    });\n  });\n}\n\nexports.getLocalVideo = getLocalVideo;\n\nfunction getLocalAudio() {\n  return new Promise(function (resolve) {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    }).then(function (stream) {\n      resolve(stream);\n    });\n  });\n}\n\nexports.getLocalAudio = getLocalAudio;\n\nfunction getLocalDesktop(option) {\n  return new Promise(function (resolve) {\n    navigator.mediaDevices.getDisplayMedia({\n      video: option || true\n    }).then(function (stream) {\n      resolve(stream);\n    });\n  });\n}\n\nexports.getLocalDesktop = getLocalDesktop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar wrtc_1 = require(\"wrtc\");\n\nvar rx_mini_1 = tslib_1.__importDefault(require(\"rx.mini\"));\n\nvar WebRTC =\n/** @class */\nfunction () {\n  function WebRTC(opt) {\n    var _this = this;\n\n    if (opt === void 0) {\n      opt = {};\n    }\n\n    this.opt = opt;\n    this.onSignal = new rx_mini_1.default();\n    this.onConnect = new rx_mini_1.default();\n    this.onDisconnect = new rx_mini_1.default();\n    this.onData = new rx_mini_1.default();\n    this.onAddTrack = new rx_mini_1.default();\n    this.isConnected = false;\n    this.isDisconnected = false;\n    this.isOffer = false;\n    this.negotiating = false;\n    var nodeId = opt.nodeId,\n        stream = opt.stream,\n        track = opt.track;\n    this.dataChannels = {};\n    this.nodeId = nodeId || \"peer\";\n    this.rtc = this.prepareNewConnection();\n\n    if (stream) {\n      stream.getTracks().forEach(function (track) {\n        return _this.rtc.addTrack(track, stream);\n      });\n    } else if (track) {\n      this.rtc.addTrack(track);\n    }\n  }\n\n  WebRTC.prototype.prepareNewConnection = function () {\n    var _this = this;\n\n    var _a = this.opt,\n        disable_stun = _a.disable_stun,\n        trickle = _a.trickle;\n    var peer = disable_stun ? new wrtc_1.RTCPeerConnection({\n      iceServers: []\n    }) : new wrtc_1.RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n\n    peer.ontrack = function (evt) {\n      var stream = evt.streams[0];\n\n      _this.onAddTrack.execute(stream);\n\n      _this.remoteStream = stream;\n    };\n\n    peer.oniceconnectionstatechange = function () {\n      switch (peer.iceConnectionState) {\n        case \"failed\":\n          break;\n\n        case \"disconnected\":\n          try {\n            _this.timeoutPing = setTimeout(function () {\n              _this.hangUp();\n            }, 2000);\n\n            _this.send(\"ping\", \"live\");\n          } catch (error) {\n            console.warn({\n              error: error\n            });\n          }\n\n          break;\n\n        case \"connected\":\n          if (_this.timeoutPing) clearTimeout(_this.timeoutPing);\n          break;\n\n        case \"closed\":\n          break;\n\n        case \"completed\":\n          break;\n      }\n    };\n\n    peer.onicecandidate = function (evt) {\n      if (!_this.isConnected) {\n        if (evt.candidate) {\n          if (trickle) {\n            _this.onSignal.execute({\n              type: \"candidate\",\n              ice: evt.candidate\n            });\n          }\n        } else {\n          if (!trickle && peer.localDescription) {\n            _this.onSignal.execute(peer.localDescription);\n          }\n        }\n      }\n    };\n\n    peer.ondatachannel = function (evt) {\n      var dataChannel = evt.channel;\n      _this.dataChannels[dataChannel.label] = dataChannel;\n\n      _this.dataChannelEvents(dataChannel);\n    };\n\n    peer.onsignalingstatechange = function (e) {\n      _this.negotiating = peer.signalingState != \"stable\";\n    };\n\n    return peer;\n  };\n\n  WebRTC.prototype.hangUp = function () {\n    this.isDisconnected = true;\n    this.isConnected = false;\n    this.onDisconnect.execute();\n  };\n\n  WebRTC.prototype.makeOffer = function () {\n    var _this = this;\n\n    this.isOffer = true;\n    var trickle = this.opt.trickle;\n    this.createDatachannel(\"datachannel\");\n\n    this.rtc.onnegotiationneeded = function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var sdp, result, local;\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.negotiating || this.rtc.signalingState != \"stable\") return [2\n              /*return*/\n              ];\n              this.negotiating = true;\n              return [4\n              /*yield*/\n              , this.rtc.createOffer().catch(console.warn)];\n\n            case 1:\n              sdp = _a.sent();\n              if (!sdp) return [2\n              /*return*/\n              ];\n              return [4\n              /*yield*/\n              , this.rtc.setLocalDescription(sdp).catch(function () {\n                return \"err\";\n              })];\n\n            case 2:\n              result = _a.sent();\n              if (result) return [2\n              /*return*/\n              ];\n              local = this.rtc.localDescription;\n\n              if (trickle && local) {\n                this.onSignal.execute(local);\n              }\n\n              this.negotiationSetting();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  };\n\n  WebRTC.prototype.negotiationSetting = function () {\n    var _this = this;\n\n    this.rtc.onnegotiationneeded = function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var offer, err, local;\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.isConnected) return [2\n              /*return*/\n              ];\n              if (this.negotiating || this.rtc.signalingState != \"stable\") return [2\n              /*return*/\n              ];\n              this.negotiating = true;\n              return [4\n              /*yield*/\n              , this.rtc.createOffer({}).catch(console.warn)];\n\n            case 1:\n              offer = _a.sent();\n              if (!offer) return [2\n              /*return*/\n              ];\n              return [4\n              /*yield*/\n              , this.rtc.setLocalDescription(offer).catch(function () {\n                return \"err\";\n              })];\n\n            case 2:\n              err = _a.sent();\n              if (err) return [2\n              /*return*/\n              ];\n              local = this.rtc.localDescription;\n              if (local) this.send(JSON.stringify(local), \"update\");\n              this.negotiating = false;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  };\n\n  WebRTC.prototype.setAnswer = function (sdp) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.rtc.setRemoteDescription(new wrtc_1.RTCSessionDescription(sdp)).catch(console.warn)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRTC.prototype.makeAnswer = function (offer) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var trickle, err, answer, local;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            trickle = this.opt.trickle;\n            return [4\n            /*yield*/\n            , this.rtc.setRemoteDescription(new wrtc_1.RTCSessionDescription(offer)).catch(function () {\n              return \"err\";\n            })];\n\n          case 1:\n            err = _a.sent();\n            if (err) return [2\n            /*return*/\n            ];\n            return [4\n            /*yield*/\n            , this.rtc.createAnswer().catch(console.warn)];\n\n          case 2:\n            answer = _a.sent();\n            if (!answer) return [2\n            /*return*/\n            ];\n            return [4\n            /*yield*/\n            , this.rtc.setLocalDescription(answer).catch(console.warn)];\n\n          case 3:\n            _a.sent();\n\n            local = this.rtc.localDescription;\n            if (!local) return [2\n            /*return*/\n            ];\n            if (this.isConnected) this.send(JSON.stringify(local), \"update\");else if (trickle) this.onSignal.execute(local);\n            this.negotiationSetting();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRTC.prototype.setSdp = function (sdp) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = sdp.type;\n\n            switch (_a) {\n              case \"offer\":\n                return [3\n                /*break*/\n                , 1];\n\n              case \"answer\":\n                return [3\n                /*break*/\n                , 2];\n\n              case \"candidate\":\n                return [3\n                /*break*/\n                , 3];\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 1:\n            this.makeAnswer(sdp);\n            return [3\n            /*break*/\n            , 5];\n\n          case 2:\n            this.setAnswer(sdp);\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.rtc.addIceCandidate(new wrtc_1.RTCIceCandidate(sdp.ice)).catch(console.warn)];\n\n          case 4:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRTC.prototype.createDatachannel = function (label) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var dc, dce_1;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!Object.keys(this.dataChannels).includes(label)) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            dc = this.rtc.createDataChannel(label);\n            this.dataChannels[label] = dc;\n            return [4\n            /*yield*/\n            , this.dataChannelEvents(dc)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            dce_1 = _a.sent();\n            console.error(dce_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRTC.prototype.dataChannelEvents = function (channel) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      channel.onopen = function () {\n        if (!_this.isConnected) {\n          _this.isConnected = true;\n\n          _this.onConnect.execute();\n        }\n\n        resolve();\n      };\n\n      channel.onmessage = function (event) {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          var sdp;\n          return tslib_1.__generator(this, function (_a) {\n            if (!event) return [2\n            /*return*/\n            ];\n\n            try {\n              if (channel.label === \"update\") {\n                sdp = JSON.parse(event.data);\n                this.setSdp(sdp);\n              } else if (channel.label === \"live\") {\n                if (event.data === \"ping\") this.send(\"pong\", \"live\");else if (this.timeoutPing) clearTimeout(this.timeoutPing);\n              } else {\n                this.onData.execute({\n                  label: channel.label,\n                  data: event.data,\n                  nodeId: this.nodeId\n                });\n              }\n            } catch (error) {\n              console.warn(error);\n            }\n\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      };\n\n      channel.onerror = function (err) {\n        return console.warn(err);\n      };\n\n      channel.onclose = function () {};\n    });\n  };\n\n  WebRTC.prototype.send = function (data, label) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            label = label || \"datachannel\";\n            if (!!Object.keys(this.dataChannels).includes(label)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createDatachannel(label)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            try {\n              this.dataChannels[label].send(data);\n            } catch (error) {\n              console.warn(error);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRTC.prototype.addTrack = function (track, stream) {\n    this.rtc.addTrack(track, stream);\n  };\n\n  WebRTC.prototype.disconnect = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a, rtc, dataChannels, key, channel;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this, rtc = _a.rtc, dataChannels = _a.dataChannels;\n\n            for (key in dataChannels) {\n              channel = dataChannels[key];\n              channel.onmessage = null;\n              channel.onopen = null;\n              channel.onclose = null;\n              channel.onerror = null;\n              channel.close();\n            }\n\n            this.dataChannels = null;\n            rtc.oniceconnectionstatechange = null;\n            rtc.onicegatheringstatechange = null;\n            rtc.onsignalingstatechange = null;\n            rtc.onicecandidate = null;\n            rtc.ontrack = null;\n            rtc.ondatachannel = null;\n            rtc.close();\n            this.rtc = null;\n            return [4\n            /*yield*/\n            , new Promise(function (r) {\n              return setTimeout(r, 1000 * 30);\n            })];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return WebRTC;\n}();\n\nexports.default = WebRTC;"],"sourceRoot":""}
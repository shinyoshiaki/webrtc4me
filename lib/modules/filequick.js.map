{"version":3,"file":"filequick.js","sourceRoot":"","sources":["../../src/modules/filequick.ts"],"names":[],"mappings":";;;AACA,oDAAwD;AAExD;IAIE,kBAAoB,IAAY;QAAhC,iBAqBC;QArBmB,SAAI,GAAJ,IAAI,CAAQ;QAHxB,UAAK,GAAG,YAAY,CAAC;QAInB,IAAA;;;;;;;;;;;;;;;;;;;;sBAAW,CAkBhB;QACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAEK,uBAAI,GAAV,UAAW,IAAU;;;;;;4BACR,qBAAM,8BAAgB,CAAC,IAAI,CAAC,EAAA;;wBAAjC,EAAE,GAAG,SAA4B;wBACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC/B,qBAAM,IAAI,OAAO,CAAC,UAAA,CAAC;gCACT,IAAA;;;;;;;;8CAAW,CAOhB;4BACL,CAAC,CAAC,EAAA;;wBATF,SASE,CAAC;wBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;KACvC;IACH,eAAC;AAAD,CAAC,AA1CD,IA0CC","sourcesContent":["import WebRTC from \"../core\";\nimport { blob2Arraybuffer } from \"../utill/arraybuffer\";\n\nexport default class SendFile {\n  private label = \"file_quick\";\n  private blob?: Blob;\n\n  constructor(private peer: WebRTC) {\n    const { unSubscribe } = peer.onData.subscribe(({ label, data }) => {\n      console.log(\"file quick\", label, data);\n      if (label === this.label) {\n        if (typeof data === \"string\") {\n          console.log({ data });\n          if (this.blob) {\n            console.log(\"dl\");\n            const url = window.URL.createObjectURL(this.blob);\n            const anchor = document.createElement(\"a\");\n            anchor.download = data;\n            anchor.href = url;\n            anchor.click();\n          }\n        } else {\n          this.blob = new Blob([data]);\n          peer.send(\"ready\", this.label);\n        }\n      }\n    });\n    peer.onDisconnect.once(unSubscribe);\n  }\n\n  async send(file: File) {\n    const ab = await blob2Arraybuffer(file);\n    this.peer.send(ab, this.label);\n    await new Promise(r => {\n      const { unSubscribe } = this.peer.onData.subscribe(({ data, label }) => {\n        if (label === this.label) {\n          if (data === \"ready\") {\n            unSubscribe();\n            r();\n          }\n        }\n      });\n    });\n    this.peer.send(file.name, this.label);\n  }\n}\n"]}
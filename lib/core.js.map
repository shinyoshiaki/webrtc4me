{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  RTCPeerConnection,\n  RTCSessionDescription,\n  RTCIceCandidate\n} from \"wrtc\";\n\nimport { Pack } from \"rx.mini\";\nimport SetupServices, { Services } from \"./services\";\n\nexport interface message {\n  label: string;\n  data: any;\n  nodeId: string;\n}\n\ninterface option {\n  disable_stun: boolean;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  nodeId: string;\n  trickle: boolean;\n}\n\nexport default class WebRTC {\n  rtc: RTCPeerConnection;\n\n  private pack = Pack();\n  private event = this.pack.event;\n\n  onSignal = this.event<any>();\n  onConnect = this.event();\n  onDisconnect = this.event();\n  onData = this.event<message>();\n  onAddTrack = this.event<MediaStream>();\n\n  private dataChannels: { [key: string]: RTCDataChannel };\n\n  nodeId: string;\n\n  isConnected = false;\n  isDisconnected = false;\n  isOffer = false;\n\n  remoteStream: MediaStream | undefined;\n  timeoutPing: any | undefined;\n\n  services = SetupServices();\n\n  constructor(public opt: Partial<option> = {}) {\n    const { nodeId, stream, track } = opt;\n    const { arrayBufferService } = this.services;\n\n    this.dataChannels = {};\n    this.nodeId = nodeId || \"peer\";\n\n    this.rtc = this.prepareNewConnection();\n\n    if (stream) {\n      stream.getTracks().forEach(track => this.rtc.addTrack(track, stream));\n    } else if (track) {\n      this.rtc.addTrack(track);\n    }\n\n    arrayBufferService.listen(this);\n  }\n\n  private prepareNewConnection() {\n    const { disable_stun, trickle } = this.opt;\n\n    const peer: RTCPeerConnection = disable_stun\n      ? new RTCPeerConnection({\n          iceServers: []\n        })\n      : new RTCPeerConnection({\n          iceServers: [\n            {\n              urls: \"stun:stun.l.google.com:19302\"\n            }\n          ]\n        });\n\n    peer.ontrack = evt => {\n      const stream = evt.streams[0];\n      this.onAddTrack.execute(stream);\n      this.remoteStream = stream;\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      switch (peer.iceConnectionState) {\n        case \"failed\":\n          break;\n        case \"disconnected\":\n          try {\n            this.timeoutPing = setTimeout(() => {\n              this.hangUp();\n            }, 2000);\n\n            this.send(\"ping\", \"live\");\n          } catch (error) {\n            console.warn({ error });\n          }\n          break;\n        case \"connected\":\n          if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          break;\n        case \"closed\":\n          break;\n        case \"completed\":\n          break;\n      }\n    };\n\n    peer.onicecandidate = evt => {\n      if (!this.isConnected) {\n        if (evt.candidate) {\n          if (trickle) {\n            this.onSignal.execute({ type: \"candidate\", ice: evt.candidate });\n          }\n        } else {\n          if (!trickle && peer.localDescription) {\n            this.onSignal.execute(peer.localDescription);\n          }\n        }\n      }\n    };\n\n    peer.ondatachannel = evt => {\n      const dataChannel = evt.channel;\n      this.dataChannels[dataChannel.label] = dataChannel;\n      this.dataChannelEvents(dataChannel);\n    };\n\n    peer.onsignalingstatechange = e => {\n      this.negotiating = peer.signalingState != \"stable\";\n    };\n\n    return peer;\n  }\n\n  hangUp() {\n    this.isDisconnected = true;\n    this.isConnected = false;\n    this.onDisconnect.execute();\n    this.disconnect();\n  }\n\n  makeOffer() {\n    this.isOffer = true;\n    const { trickle } = this.opt;\n    this.createDatachannel(\"datachannel\");\n\n    this.rtc.onnegotiationneeded = async () => {\n      if (this.negotiating || this.rtc.signalingState != \"stable\") return;\n      this.negotiating = true;\n\n      const sdp = await this.rtc.createOffer().catch(console.warn);\n\n      if (!sdp) return;\n\n      const result = await this.rtc.setLocalDescription(sdp).catch(() => \"err\");\n      if (result) return;\n\n      const local = this.rtc.localDescription;\n\n      if (trickle && local) {\n        this.onSignal.execute(local);\n      }\n\n      this.negotiationSetting();\n    };\n  }\n\n  negotiating = false;\n  private negotiationSetting() {\n    this.rtc.onnegotiationneeded = async () => {\n      if (!this.isConnected) return;\n      if (this.negotiating || this.rtc.signalingState != \"stable\") return;\n\n      this.negotiating = true;\n\n      const offer = await this.rtc.createOffer({}).catch(console.warn);\n      if (!offer) return;\n\n      const err = await this.rtc.setLocalDescription(offer).catch(() => \"err\");\n      if (err) return;\n\n      const local = this.rtc.localDescription;\n      if (local) this.send(JSON.stringify(local), \"update\");\n\n      this.negotiating = false;\n    };\n  }\n\n  private async setAnswer(sdp: any) {\n    await this.rtc\n      .setRemoteDescription(new RTCSessionDescription(sdp))\n      .catch(console.warn);\n  }\n\n  private async makeAnswer(offer: any) {\n    const { trickle } = this.opt;\n\n    const err = await this.rtc\n      .setRemoteDescription(new RTCSessionDescription(offer))\n      .catch(() => \"err\");\n    if (err) return;\n\n    const answer = await this.rtc.createAnswer().catch(console.warn);\n    if (!answer) return;\n\n    await this.rtc.setLocalDescription(answer).catch(console.warn);\n\n    const local = this.rtc.localDescription;\n    if (!local) return;\n\n    if (this.isConnected) this.send(JSON.stringify(local), \"update\");\n    else if (trickle) this.onSignal.execute(local);\n\n    this.negotiationSetting();\n  }\n\n  async setSdp(sdp: any) {\n    switch (sdp.type) {\n      case \"offer\":\n        this.makeAnswer(sdp);\n        break;\n      case \"answer\":\n        this.setAnswer(sdp);\n        break;\n      case \"candidate\":\n        await this.rtc\n          .addIceCandidate(new RTCIceCandidate(sdp.ice))\n          .catch(console.warn);\n        break;\n    }\n  }\n\n  private async createDatachannel(label: string) {\n    if (!Object.keys(this.dataChannels).includes(label)) {\n      try {\n        const dc = this.rtc.createDataChannel(label);\n        this.dataChannels[label] = dc;\n        await this.dataChannelEvents(dc);\n      } catch (dce) {\n        console.error(dce);\n      }\n    }\n  }\n\n  private dataChannelEvents(channel: RTCDataChannel) {\n    return new Promise(resolve => {\n      channel.onopen = () => {\n        if (!this.isConnected) {\n          this.isConnected = true;\n          this.onConnect.execute();\n        }\n        resolve();\n      };\n\n      channel.onmessage = async event => {\n        if (!event) return;\n        try {\n          if (channel.label === \"update\") {\n            const sdp = JSON.parse(event.data);\n            this.setSdp(sdp);\n          } else if (channel.label === \"live\") {\n            if (event.data === \"ping\") this.send(\"pong\", \"live\");\n            else if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          } else {\n            this.onData.execute({\n              label: channel.label,\n              data: event.data,\n              nodeId: this.nodeId\n            });\n          }\n        } catch (error) {\n          console.warn(error);\n        }\n      };\n\n      channel.onerror = err => console.warn(err);\n      channel.onclose = () => {};\n    });\n  }\n\n  async send(data: string | ArrayBuffer | Buffer, label?: string) {\n    const { arrayBufferService } = this.services;\n    label = label || \"datachannel\";\n    if (!Object.keys(this.dataChannels).includes(label)) {\n      await this.createDatachannel(label);\n    }\n    try {\n      if (typeof data === \"string\") {\n        this.dataChannels[label].send(data);\n      } else {\n        if (data.byteLength > 16000) {\n          await this.createDatachannel(arrayBufferService.label);\n          await arrayBufferService.send(\n            data,\n            label,\n            this.dataChannels[arrayBufferService.label]\n          );\n        } else {\n          this.dataChannels[label].send(data);\n        }\n      }\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  addTrack(track: MediaStreamTrack, stream: MediaStream) {\n    this.rtc.addTrack(track, stream);\n  }\n\n  private disconnect() {\n    const { rtc, dataChannels } = this;\n\n    for (let key in dataChannels) {\n      const channel = dataChannels[key];\n      channel.onmessage = null;\n      channel.onopen = null;\n      channel.onclose = null;\n      channel.onerror = null;\n      channel.close();\n    }\n    this.dataChannels = null as any;\n\n    rtc.oniceconnectionstatechange = null;\n    rtc.onicegatheringstatechange = null;\n    rtc.onsignalingstatechange = null;\n    rtc.onicecandidate = null;\n    rtc.ontrack = null;\n    rtc.ondatachannel = null;\n    rtc.close();\n    this.rtc = null as any;\n\n    this.pack.finishAll();\n  }\n}\n"]}
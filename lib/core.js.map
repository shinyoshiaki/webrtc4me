{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pack, Wait } from \"rx.mini\";\nimport SetupServices from \"./services\";\n\nexport type Message = {\n  label: string | \"datachannel\";\n  data: string | ArrayBuffer;\n  nodeId: string;\n};\n\nexport type Signal = {\n  type: \"candidate\" | \"offer\" | \"answer\" | \"pranswer\" | \"rollback\";\n  ice?: RTCIceCandidateInit;\n  sdp?: string;\n};\n\ntype Option = {\n  disable_stun: boolean;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  nodeId: string;\n  trickle: boolean;\n  wrtc: any;\n};\n\nlet { RTCPeerConnection, RTCSessionDescription, RTCIceCandidate } = (() => {\n  try {\n    return window;\n  } catch (error) {\n    return {} as any;\n  }\n})();\n\nexport default class WebRTC {\n  rtc: RTCPeerConnection;\n\n  private pack = Pack();\n  private event = this.pack.event;\n\n  onSignal = this.event<Signal>();\n  onConnect = this.event<undefined>();\n  onDisconnect = this.event<undefined>();\n  onData = this.event<Message>();\n  onAddTrack = this.event<MediaStream>();\n\n  private wait4DC = new Wait<RTCDataChannel | undefined>();\n\n  private dataChannels: { [key: string]: RTCDataChannel };\n\n  nodeId: string;\n\n  isConnected = false;\n  isDisconnected = false;\n  isOffer = false;\n  isNegotiating = false;\n\n  remoteStream: MediaStream | undefined;\n  timeoutPing: any | undefined;\n\n  services = SetupServices();\n\n  constructor(public opt: Partial<Option> = {}) {\n    const { nodeId, stream, track, wrtc } = opt;\n    const { arrayBufferService } = this.services;\n\n    if (wrtc) {\n      RTCPeerConnection = wrtc.RTCPeerConnection;\n      RTCSessionDescription = wrtc.RTCSessionDescription;\n      RTCIceCandidate = wrtc.RTCIceCandidate;\n    }\n\n    this.dataChannels = {};\n    this.nodeId = nodeId || \"peer\";\n\n    this.rtc = this.prepareNewConnection();\n\n    if (stream) {\n      stream.getTracks().forEach(track => this.rtc.addTrack(track, stream));\n    } else if (track) {\n      this.rtc.addTrack(track);\n    }\n\n    arrayBufferService.listen(this);\n  }\n\n  private prepareNewConnection() {\n    const { disable_stun, trickle } = this.opt;\n    const peer = new RTCPeerConnection({\n      iceServers: disable_stun\n        ? []\n        : [\n            {\n              urls: \"stun:stun.l.google.com:19302\"\n            }\n          ]\n    }) as RTCPeerConnection;\n\n    peer.ontrack = evt => {\n      const stream = evt.streams[0];\n      this.onAddTrack.execute(stream);\n      this.remoteStream = stream;\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      switch (peer.iceConnectionState) {\n        case \"failed\":\n          break;\n        case \"disconnected\":\n          if (this.rtc) {\n            this.timeoutPing = setTimeout(() => {\n              this.hangUp();\n            }, 1000);\n            try {\n              this.send(\"ping\", \"live\");\n            } catch (error) {\n              console.warn(\"disconnected\", { error });\n            }\n          }\n          break;\n        case \"connected\":\n          if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          break;\n        case \"closed\":\n          break;\n        case \"completed\":\n          break;\n      }\n    };\n\n    peer.onicecandidate = evt => {\n      if (!this.isConnected) {\n        const ice = evt.candidate;\n        if (ice) {\n          if (trickle) {\n            this.onSignal.execute({\n              type: \"candidate\",\n              ice: JSON.parse(JSON.stringify(ice))\n            });\n          }\n        } else {\n          if (!trickle && peer.localDescription) {\n            this.onSignal.execute(peer.localDescription);\n          }\n        }\n      }\n    };\n\n    peer.ondatachannel = evt => {\n      const dataChannel = evt.channel;\n      this.dataChannels[dataChannel.label] = dataChannel;\n      this.dataChannelEvents(dataChannel);\n    };\n\n    peer.onsignalingstatechange = e => {\n      this.isNegotiating = peer.signalingState != \"stable\";\n    };\n\n    return peer;\n  }\n\n  hangUp() {\n    this.isDisconnected = true;\n    this.isConnected = false;\n    this.onDisconnect.execute(undefined);\n    this.disconnect();\n  }\n\n  makeOffer() {\n    this.isOffer = true;\n    const { trickle } = this.opt;\n    this.createDatachannel(\"datachannel\");\n\n    this.rtc.onnegotiationneeded = async () => {\n      if (this.isNegotiating || this.rtc.signalingState != \"stable\") return;\n      this.isNegotiating = true;\n\n      const sdp = await this.rtc.createOffer().catch(console.warn);\n\n      if (!sdp) return;\n\n      const err = await this.rtc.setLocalDescription(sdp).catch(() => \"err\");\n      if (err) return;\n\n      const local = this.rtc.localDescription;\n\n      if (trickle && local) {\n        this.onSignal.execute(local);\n      }\n\n      this.negotiationSetting();\n    };\n  }\n\n  private negotiationSetting() {\n    this.rtc.onnegotiationneeded = async () => {\n      if (!this.isConnected) return;\n      if (this.isNegotiating || this.rtc.signalingState != \"stable\") return;\n\n      this.isNegotiating = true;\n\n      const offer = await this.rtc.createOffer({}).catch(console.warn);\n      if (!offer) return;\n\n      const err = await this.rtc.setLocalDescription(offer).catch(() => \"err\");\n      if (err) return;\n\n      const local = this.rtc.localDescription;\n      if (local) this.send(JSON.stringify(local), \"update\");\n\n      this.isNegotiating = false;\n    };\n  }\n\n  private async setAnswer(sdp: Signal) {\n    await this.rtc\n      .setRemoteDescription(new RTCSessionDescription(sdp))\n      .catch(console.warn);\n  }\n\n  private async makeAnswer(offer: Signal) {\n    const { trickle } = this.opt;\n\n    {\n      const err = await this.rtc\n        .setRemoteDescription(new RTCSessionDescription(offer))\n        .catch(() => \"err\");\n      if (err) return;\n    }\n\n    const answer = await this.rtc.createAnswer().catch(console.warn);\n    if (!answer) return;\n\n    {\n      const err = await this.rtc.setLocalDescription(answer).catch(() => \"err\");\n      if (err) return;\n    }\n\n    const local = this.rtc.localDescription;\n    if (!local) return;\n\n    if (this.isConnected) this.send(JSON.stringify(local), \"update\");\n    else if (trickle) this.onSignal.execute(local);\n\n    this.negotiationSetting();\n  }\n\n  async setSdp(sdp: Signal) {\n    switch (sdp.type) {\n      case \"offer\":\n        this.makeAnswer(sdp);\n        break;\n      case \"answer\":\n        this.setAnswer(sdp);\n        break;\n      case \"candidate\":\n        await this.rtc\n          .addIceCandidate(new RTCIceCandidate(sdp.ice))\n          .catch(console.warn);\n        break;\n    }\n  }\n\n  private isDCOpend = (label: string) => {\n    const dc = this.dataChannels[label];\n    if (!dc) return false;\n    return dc.readyState === \"open\";\n  };\n\n  private async createDatachannel(label: string) {\n    const wait = async () => {\n      try {\n        const dc = this.rtc.createDataChannel(label);\n        await this.dataChannelEvents(dc);\n        if (dc.readyState === \"open\") return dc;\n      } catch (dce) {\n        console.error(dce);\n      }\n    };\n\n    if (!this.isDCOpend(label)) {\n      const { exist, result } = await this.wait4DC.create(label, wait);\n\n      if (exist) {\n        const res = await exist.asPromise().catch(() => {});\n        if (res) this.dataChannels[label] = res;\n      }\n      if (result) {\n        this.dataChannels[label] = result;\n      }\n    }\n  }\n\n  private dataChannelEvents(channel: RTCDataChannel) {\n    return new Promise(resolve => {\n      channel.onopen = () => {\n        if (!this.isConnected) {\n          this.isConnected = true;\n          this.onConnect.execute(undefined);\n        }\n        resolve();\n      };\n\n      channel.onmessage = async event => {\n        if (!event) return;\n        try {\n          if (channel.label === \"update\") {\n            const sdp = JSON.parse(event.data);\n            this.setSdp(sdp);\n          } else if (channel.label === \"live\") {\n            if (event.data === \"ping\") this.send(\"pong\", \"live\");\n            else if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          } else {\n            this.onData.execute({\n              label: channel.label as string | \"datachannel\",\n              data: event.data,\n              nodeId: this.nodeId\n            });\n          }\n        } catch (error) {\n          console.warn(error);\n        }\n      };\n\n      channel.onerror = err => console.warn(err);\n      channel.onclose = () => {};\n    });\n  }\n\n  async send(data: string | ArrayBuffer | Buffer, label = \"datachannel\") {\n    if (!this.rtc) return;\n    const { arrayBufferService } = this.services;\n    const sendData = async () => {\n      try {\n        if (typeof data === \"string\") {\n          const err = await this.createDatachannel(label).catch(() => \"error\");\n          if (err) return err;\n          this.dataChannels[label].send(data);\n        } else {\n          if (data.byteLength > 16000) {\n            const err = await this.createDatachannel(\n              arrayBufferService.label\n            ).catch(() => \"error\");\n            if (err) return err;\n            arrayBufferService.send(\n              data,\n              label,\n              this.dataChannels[arrayBufferService.label],\n              this.rtc\n            );\n          } else {\n            const err = await this.createDatachannel(label).catch(\n              () => \"error\"\n            );\n            if (err) return err;\n            this.dataChannels[label].send(data);\n          }\n        }\n      } catch (error) {\n        return \"unhandle datachannel error\";\n      }\n    };\n\n    const err = await sendData();\n    if (err) {\n      console.warn(\"retry send data channel\");\n      await new Promise(r => setTimeout(r));\n      const error = await sendData();\n      console.warn(\"fail\", error, (data as Buffer).length);\n    }\n  }\n\n  addTrack(track: MediaStreamTrack, stream: MediaStream) {\n    this.rtc.addTrack(track, stream);\n  }\n\n  private disconnect() {\n    const { rtc, dataChannels } = this;\n\n    if (!rtc) return;\n\n    for (let key in dataChannels) {\n      const channel = dataChannels[key];\n      channel.onmessage = null as any;\n      channel.onopen = null as any;\n      channel.onclose = null as any;\n      channel.onerror = null as any;\n      channel.close();\n    }\n\n    rtc.oniceconnectionstatechange = null as any;\n    rtc.onicegatheringstatechange = null as any;\n    rtc.onsignalingstatechange = null as any;\n    rtc.onicecandidate = null as any;\n    rtc.ontrack = null as any;\n    rtc.ondatachannel = null as any;\n    rtc.close();\n\n    this.rtc = null as any;\n\n    this.pack.finishAll();\n  }\n}\n"]}
{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.ts"],"names":[],"mappings":"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","sourcesContent":["import ArrayBufferService from \"./services/arraybuffer\";\nimport { DataChannelService } from \"./services/datachannel\";\nimport { Pack } from \"rx.mini\";\n\ntype Option = {\n  disable_stun: boolean;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  nodeId: string;\n  trickle: boolean;\n  wrtc: any;\n};\n\nlet { RTCPeerConnection, RTCSessionDescription, RTCIceCandidate } = (() => {\n  try {\n    return window;\n  } catch (error) {\n    return {} as any;\n  }\n})() as {\n  RTCPeerConnection: typeof globalThis.RTCPeerConnection;\n  RTCSessionDescription: typeof globalThis.RTCSessionDescription;\n  RTCIceCandidate: typeof globalThis.RTCIceCandidate;\n};\n\nexport default class WebRTC {\n  rtc: RTCPeerConnection;\n\n  private pack = Pack();\n  private event = this.pack.event;\n\n  onSignal = this.event<Signal>();\n  onConnect = this.event();\n  onDisconnect = this.event();\n  onData = this.event<Message>();\n  onAddTrack = this.event<MediaStream>();\n  onOpenDC = this.event<RTCDataChannel>();\n\n  nodeId: string;\n\n  isConnected = false;\n  isDisconnected = false;\n  isOffer = false;\n  isNegotiating = false;\n\n  remoteStream?: MediaStream;\n  private timeoutPing?: any;\n\n  private arrayBufferService = new ArrayBufferService(this);\n  private dataChannelService: DataChannelService;\n\n  constructor(public opt: Partial<Option> = {}) {\n    const { nodeId, stream, track, wrtc } = opt;\n\n    if (wrtc) {\n      RTCPeerConnection = wrtc.RTCPeerConnection;\n      RTCSessionDescription = wrtc.RTCSessionDescription;\n      RTCIceCandidate = wrtc.RTCIceCandidate;\n    }\n\n    this.nodeId = nodeId || \"peer\";\n\n    this.rtc = this.prepareNewConnection();\n\n    this.dataChannelService = new DataChannelService(this.rtc);\n    this.dataChannelService.onMessage.subscribe(({ data, channel }) => {\n      this.onMessage(data, channel);\n    });\n    this.dataChannelService.onOpenDC.once(() => {\n      this.isConnected = true;\n      this.onConnect.execute(null);\n\n      this.dataChannelService.onOpenDC.subscribe(dc => {\n        this.onOpenDC.execute(dc);\n      });\n    });\n\n    if (stream) {\n      stream.getTracks().forEach(track => this.rtc.addTrack(track, stream));\n    } else if (track) {\n      this.rtc.addTrack(track);\n    }\n  }\n\n  private prepareNewConnection() {\n    const { disable_stun, trickle } = this.opt;\n    const peer = new RTCPeerConnection({\n      iceServers: disable_stun\n        ? []\n        : [\n            {\n              urls: \"stun:stun.l.google.com:19302\"\n            }\n          ]\n    });\n\n    peer.ontrack = evt => {\n      const stream = evt.streams[0];\n      this.onAddTrack.execute(stream);\n      this.remoteStream = stream;\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      switch (peer.iceConnectionState) {\n        case \"failed\":\n          break;\n        case \"disconnected\":\n          if (this.rtc) {\n            this.timeoutPing = setTimeout(() => {\n              this.hangUp();\n            }, 1000);\n            try {\n              this.send(\"ping\", \"live\");\n            } catch (error) {\n              console.warn(\"disconnected\", { error });\n            }\n          }\n          break;\n        case \"connected\":\n          if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          break;\n        case \"closed\":\n          this.hangUp();\n          break;\n        case \"completed\":\n          break;\n      }\n    };\n\n    peer.onicecandidate = ({ candidate }) => {\n      if (!this.isConnected) {\n        if (candidate) {\n          if (trickle) {\n            this.onSignal.execute({\n              type: \"candidate\",\n              ice: JSON.parse(JSON.stringify(candidate))\n            });\n          }\n        } else {\n          if (!trickle && peer.localDescription) {\n            this.onSignal.execute(peer.localDescription);\n          }\n        }\n      }\n    };\n\n    peer.onsignalingstatechange = () => {\n      this.isNegotiating = peer.signalingState != \"stable\";\n    };\n\n    return peer;\n  }\n\n  makeOffer() {\n    this.isOffer = true;\n    const { trickle } = this.opt;\n\n    this.dataChannelService.create(\"datachannel\");\n\n    this.rtc.onnegotiationneeded = async () => {\n      if (this.isNegotiating || this.rtc.signalingState != \"stable\") {\n        console.warn(\"already negotiating\");\n        return;\n      }\n\n      this.isNegotiating = true;\n\n      const sdp = await this.rtc.createOffer().catch(console.warn);\n      if (!sdp) return;\n\n      const err = await this.rtc.setLocalDescription(sdp).catch(() => \"err\");\n      if (err) return;\n\n      const local = this.rtc.localDescription;\n\n      if (trickle && local) {\n        this.onSignal.execute(local);\n      }\n\n      this.updateNegotiation();\n    };\n  }\n\n  private updateNegotiation() {\n    this.rtc.onnegotiationneeded = async () => {\n      if (!this.isConnected) return;\n      if (this.isNegotiating || this.rtc.signalingState != \"stable\") {\n        console.warn(\"already negotiating\");\n        return;\n      }\n\n      this.isNegotiating = true;\n\n      const sdp = await this.rtc.createOffer().catch(console.warn);\n      if (!sdp) return;\n\n      const err = await this.rtc.setLocalDescription(sdp).catch(() => \"err\");\n      if (err) return;\n\n      const local = this.rtc.localDescription;\n      if (local) {\n        this.send(JSON.stringify(local), \"update\");\n      }\n\n      this.isNegotiating = false;\n    };\n  }\n\n  private async setAnswer(sdp: Signal) {\n    await this.rtc\n      .setRemoteDescription(\n        new RTCSessionDescription(sdp as RTCSessionDescriptionInit)\n      )\n      .catch(console.warn);\n  }\n\n  private async makeAnswer(offer: Signal) {\n    const { trickle } = this.opt;\n\n    {\n      const err = await this.rtc\n        .setRemoteDescription(\n          new RTCSessionDescription(offer as RTCSessionDescriptionInit)\n        )\n        .catch(() => \"err\");\n      if (err) return err;\n    }\n\n    const answer = await this.rtc.createAnswer().catch(console.warn);\n    if (!answer) return \"err\";\n\n    {\n      const err = await this.rtc.setLocalDescription(answer).catch(() => \"err\");\n      if (err) return err;\n    }\n\n    const local = this.rtc.localDescription;\n    if (!local) return \"err\";\n\n    if (this.isConnected) this.send(JSON.stringify(local), \"update\");\n    else if (trickle) this.onSignal.execute(local);\n\n    this.updateNegotiation();\n  }\n\n  async setSdp(sdp: Signal) {\n    switch (sdp.type) {\n      case \"offer\":\n        const err = await this.makeAnswer(sdp);\n        err && console.warn(err);\n        break;\n      case \"answer\":\n        this.setAnswer(sdp);\n        break;\n      case \"candidate\":\n        await this.rtc\n          .addIceCandidate(new RTCIceCandidate(sdp.ice))\n          .catch(console.warn);\n        break;\n    }\n  }\n\n  onMessage = async (data: any, channel: RTCDataChannel) => {\n    try {\n      switch (channel.label) {\n        case \"update\":\n          {\n            const sdp = JSON.parse(data);\n            this.setSdp(sdp);\n          }\n          break;\n        case \"live\":\n          {\n            if (data === \"ping\") this.send(\"pong\", \"live\");\n            else if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          }\n          break;\n        case \"close\":\n          {\n            this.hangUp();\n          }\n          break;\n        default: {\n          let dataType: DataType = \"string\";\n\n          if (typeof data === \"string\") {\n            try {\n              const check = JSON.parse(data);\n              if (check.it87nc247 === \"json\") {\n                dataType = \"object\";\n                data = check.payload;\n              }\n            } catch (error) {}\n          } else {\n            dataType = \"ArrayBuffer\";\n          }\n\n          this.onData.execute({\n            label: channel.label as string | \"datachannel\",\n            data,\n            nodeId: this.nodeId,\n            dataType\n          });\n        }\n      }\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  async send(data: string | ArrayBuffer | Buffer, label = \"datachannel\") {\n    if (!this.rtc) return;\n    const { arrayBufferService } = this;\n\n    try {\n      if (typeof data !== \"string\" && data.byteLength > 16000) {\n        await arrayBufferService.send(data, label);\n      } else {\n        const success = await this.dataChannelService\n          .create(label)\n          .catch(console.warn);\n        if (!success) throw new Error(\"dataChannel.create\");\n\n        this.dataChannelService.send(data, label);\n      }\n    } catch (error) {\n      throw new Error(\"unhandle datachannel error\");\n    }\n  }\n\n  async sendJson(payload: object, label = \"datachannel\") {\n    if (!this.rtc) return;\n\n    const success = await this.dataChannelService\n      .create(label)\n      .catch(console.warn);\n    if (!success) throw new Error(\"dataChannel.create\");\n\n    this.dataChannelService.send(\n      // random string key\n      JSON.stringify({ it87nc247: \"json\", payload }),\n      label\n    );\n  }\n\n  addTrack(track: MediaStreamTrack, stream: MediaStream) {\n    this.rtc.addTrack(track, stream);\n  }\n\n  addStream(stream: MediaStream) {\n    try {\n      this.rtc.addTrack(stream.getVideoTracks()[0], stream);\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  async hangUp() {\n    const { rtc } = this;\n\n    if (!rtc) return;\n\n    await this.send(\"close\", \"close\").catch(() => {});\n\n    this.dataChannelService.dispose();\n\n    rtc.oniceconnectionstatechange = null as any;\n    rtc.onicegatheringstatechange = null as any;\n    rtc.onsignalingstatechange = null as any;\n    rtc.onicecandidate = null as any;\n    rtc.ontrack = null as any;\n    rtc.ondatachannel = null as any;\n    rtc.close();\n    this.rtc = null as any;\n\n    this.isDisconnected = true;\n    this.isConnected = false;\n    this.onDisconnect.execute(null);\n\n    this.pack.finishAll();\n  }\n}\n\ntype DataType = \"string\" | \"ArrayBuffer\" | \"object\";\n\nexport type Message = {\n  label: string | \"datachannel\";\n  data: string | ArrayBuffer | object;\n  dataType: DataType;\n  nodeId: string;\n};\n\nexport type Signal = {\n  type: \"candidate\" | \"offer\" | \"answer\" | \"pranswer\" | \"rollback\";\n  ice?: RTCIceCandidateInit;\n  sdp?: string;\n};\n"]}